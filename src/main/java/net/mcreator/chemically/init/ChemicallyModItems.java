
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.chemically.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.common.ForgeSpawnEggItem;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.DoubleHighBlockItem;
import net.minecraft.world.item.BlockItem;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.client.renderer.item.ItemProperties;

import net.mcreator.chemically.procedures.ThermiteGrenadPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.SCANNERPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.LithiumIonBatteryPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.GravityGunPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.FuelCanisterPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.ElectriceLighterPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.ElectricLighterPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.ElectricLighterActivePropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.BeakerPropertyValueProviderProcedure;
import net.mcreator.chemically.procedures.BeakerPropertyValueProvider3Procedure;
import net.mcreator.chemically.procedures.BeakerPropertyValueProvider2Procedure;
import net.mcreator.chemically.item.WrenchItem;
import net.mcreator.chemically.item.WitheriteIngotItem;
import net.mcreator.chemically.item.UraniumSwordItem;
import net.mcreator.chemically.item.UraniumShovelItem;
import net.mcreator.chemically.item.UraniumPickaxeItem;
import net.mcreator.chemically.item.UraniumIngotItem;
import net.mcreator.chemically.item.UraniumHoeItem;
import net.mcreator.chemically.item.UraniumAxeItem;
import net.mcreator.chemically.item.UraniumArmorItem;
import net.mcreator.chemically.item.TimeCrystalItem;
import net.mcreator.chemically.item.ThermiteItem;
import net.mcreator.chemically.item.ThermiteGrenadItem;
import net.mcreator.chemically.item.TestTubeItem;
import net.mcreator.chemically.item.SynchrotronItem;
import net.mcreator.chemically.item.SulfurItem;
import net.mcreator.chemically.item.SteelWireSpoolItem;
import net.mcreator.chemically.item.SteelRodItem;
import net.mcreator.chemically.item.SteelItem;
import net.mcreator.chemically.item.SteelIngotItem;
import net.mcreator.chemically.item.SilverIngotItem;
import net.mcreator.chemically.item.ServoItem;
import net.mcreator.chemically.item.SaltpeterItem;
import net.mcreator.chemically.item.SCANNERItem;
import net.mcreator.chemically.item.RubyItem;
import net.mcreator.chemically.item.RubberItem;
import net.mcreator.chemically.item.ReinforcedStickItem;
import net.mcreator.chemically.item.RefinedQuartzItem;
import net.mcreator.chemically.item.RedstoneWireItem;
import net.mcreator.chemically.item.RawUraniumItem;
import net.mcreator.chemically.item.RawSilverItem;
import net.mcreator.chemically.item.RawNickelItemItem;
import net.mcreator.chemically.item.RawLeadItemItem;
import net.mcreator.chemically.item.RawAluminumItem;
import net.mcreator.chemically.item.PseudoephedrineItem;
import net.mcreator.chemically.item.PortableLPMDSItem;
import net.mcreator.chemically.item.PolyvinylChlorideItem;
import net.mcreator.chemically.item.PolyethyleneItem;
import net.mcreator.chemically.item.PhosphorousItem;
import net.mcreator.chemically.item.OnyxItem;
import net.mcreator.chemically.item.NitrogenItem;
import net.mcreator.chemically.item.NitrateDustItem;
import net.mcreator.chemically.item.NickelRodItem;
import net.mcreator.chemically.item.NickelIngotItem;
import net.mcreator.chemically.item.NanophotonicElectronAcceleratorItem;
import net.mcreator.chemically.item.MethItem;
import net.mcreator.chemically.item.LogicCircuitItem;
import net.mcreator.chemically.item.LithiumIonBatteryItem;
import net.mcreator.chemically.item.LightBulbItem;
import net.mcreator.chemically.item.LeadSwordItem;
import net.mcreator.chemically.item.LeadShovelItem;
import net.mcreator.chemically.item.LeadPickaxeItem;
import net.mcreator.chemically.item.LeadIngotItem;
import net.mcreator.chemically.item.LeadHoeItem;
import net.mcreator.chemically.item.LeadAxeItem;
import net.mcreator.chemically.item.LeadArmorItem;
import net.mcreator.chemically.item.JadeItem;
import net.mcreator.chemically.item.IronRodItem;
import net.mcreator.chemically.item.IodineItem;
import net.mcreator.chemically.item.HydrogenItem;
import net.mcreator.chemically.item.HatItem;
import net.mcreator.chemically.item.GravityGunItem;
import net.mcreator.chemically.item.GoldRodItem;
import net.mcreator.chemically.item.GasCylinderItem;
import net.mcreator.chemically.item.FuelCanisterItem;
import net.mcreator.chemically.item.FlaskItem;
import net.mcreator.chemically.item.FaradayArmorItem;
import net.mcreator.chemically.item.EverythingItem;
import net.mcreator.chemically.item.EphedraSeedsItem;
import net.mcreator.chemically.item.EphedraItem;
import net.mcreator.chemically.item.EnginePistonItem;
import net.mcreator.chemically.item.ElectrumIngotItem;
import net.mcreator.chemically.item.ElectricLighterItem;
import net.mcreator.chemically.item.CyanideItem;
import net.mcreator.chemically.item.CopperWireItem;
import net.mcreator.chemically.item.CopperSwordItem;
import net.mcreator.chemically.item.CopperShovelItem;
import net.mcreator.chemically.item.CopperRodItem;
import net.mcreator.chemically.item.CopperPickaxeItem;
import net.mcreator.chemically.item.CopperHoeItem;
import net.mcreator.chemically.item.CopperAxeItem;
import net.mcreator.chemically.item.CopperArmorItem;
import net.mcreator.chemically.item.ConstantanItem;
import net.mcreator.chemically.item.CockroachWingItem;
import net.mcreator.chemically.item.CircuitBoardItem;
import net.mcreator.chemically.item.CapacitorItem;
import net.mcreator.chemically.item.BronzeIngotItem;
import net.mcreator.chemically.item.BiomassItem;
import net.mcreator.chemically.item.BeakerItem;
import net.mcreator.chemically.item.AquamarineItem;
import net.mcreator.chemically.item.AntennaItem;
import net.mcreator.chemically.item.AmmoniaItem;
import net.mcreator.chemically.item.AluminumSwordItem;
import net.mcreator.chemically.item.AluminumShovelItem;
import net.mcreator.chemically.item.AluminumPickaxeItem;
import net.mcreator.chemically.item.AluminumIngotItem;
import net.mcreator.chemically.item.AluminumHoeItem;
import net.mcreator.chemically.item.AluminumAxeItem;
import net.mcreator.chemically.item.AluminumArmorItem;
import net.mcreator.chemically.item.AluminosilicateItem;
import net.mcreator.chemically.item.AdvancedLogicCircuitItem;
import net.mcreator.chemically.item.AdvancedComputationCircuitItem;
import net.mcreator.chemically.item.AdhesiveItem;
import net.mcreator.chemically.ChemicallyMod;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class ChemicallyModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, ChemicallyMod.MODID);
	public static final RegistryObject<Item> TEST_TUBE = REGISTRY.register("test_tube", () -> new TestTubeItem());
	public static final RegistryObject<Item> GAS_CYLINDER = REGISTRY.register("gas_cylinder", () -> new GasCylinderItem());
	public static final RegistryObject<Item> FLASK = REGISTRY.register("flask", () -> new FlaskItem());
	public static final RegistryObject<Item> BEAKER = REGISTRY.register("beaker", () -> new BeakerItem());
	public static final RegistryObject<Item> SERVER = block(ChemicallyModBlocks.SERVER);
	public static final RegistryObject<Item> CONVEYER = block(ChemicallyModBlocks.CONVEYER);
	public static final RegistryObject<Item> SINUSOIDAL_WAVE = block(ChemicallyModBlocks.SINUSOIDAL_WAVE);
	public static final RegistryObject<Item> POLARITY_DEVICE = block(ChemicallyModBlocks.POLARITY_DEVICE);
	public static final RegistryObject<Item> HYDRAULIC_PRESS = block(ChemicallyModBlocks.HYDRAULIC_PRESS);
	public static final RegistryObject<Item> POWER_CELL = block(ChemicallyModBlocks.POWER_CELL);
	public static final RegistryObject<Item> ELECTROMAGNETIC_FIELD_GENERATOR = block(ChemicallyModBlocks.ELECTROMAGNETIC_FIELD_GENERATOR);
	public static final RegistryObject<Item> ACCELERATOR = block(ChemicallyModBlocks.ACCELERATOR);
	public static final RegistryObject<Item> LAUNCH_PAD = block(ChemicallyModBlocks.LAUNCH_PAD);
	public static final RegistryObject<Item> FUEL_CANISTER = REGISTRY.register("fuel_canister", () -> new FuelCanisterItem());
	public static final RegistryObject<Item> WRENCH = REGISTRY.register("wrench", () -> new WrenchItem());
	public static final RegistryObject<Item> SCANNER = REGISTRY.register("scanner", () -> new SCANNERItem());
	public static final RegistryObject<Item> LITHIUM_ION_BATTERY = REGISTRY.register("lithium_ion_battery", () -> new LithiumIonBatteryItem());
	public static final RegistryObject<Item> THERMITE_GRENAD = REGISTRY.register("thermite_grenad", () -> new ThermiteGrenadItem());
	public static final RegistryObject<Item> REINFORCED_STICK = REGISTRY.register("reinforced_stick", () -> new ReinforcedStickItem());
	public static final RegistryObject<Item> COPPER_ROD = REGISTRY.register("copper_rod", () -> new CopperRodItem());
	public static final RegistryObject<Item> NICKEL_ROD = REGISTRY.register("nickel_rod", () -> new NickelRodItem());
	public static final RegistryObject<Item> IRON_ROD = REGISTRY.register("iron_rod", () -> new IronRodItem());
	public static final RegistryObject<Item> STEEL_ROD = REGISTRY.register("steel_rod", () -> new SteelRodItem());
	public static final RegistryObject<Item> GOLD_ROD = REGISTRY.register("gold_rod", () -> new GoldRodItem());
	public static final RegistryObject<Item> COPPER_WIRE = REGISTRY.register("copper_wire", () -> new CopperWireItem());
	public static final RegistryObject<Item> REDSTONE_WIRE = REGISTRY.register("redstone_wire", () -> new RedstoneWireItem());
	public static final RegistryObject<Item> STEEL_WIRE_SPOOL = REGISTRY.register("steel_wire_spool", () -> new SteelWireSpoolItem());
	public static final RegistryObject<Item> FARADAY_ARMOR_HELMET = REGISTRY.register("faraday_armor_helmet", () -> new FaradayArmorItem.Helmet());
	public static final RegistryObject<Item> FARADAY_ARMOR_CHESTPLATE = REGISTRY.register("faraday_armor_chestplate", () -> new FaradayArmorItem.Chestplate());
	public static final RegistryObject<Item> FARADAY_ARMOR_LEGGINGS = REGISTRY.register("faraday_armor_leggings", () -> new FaradayArmorItem.Leggings());
	public static final RegistryObject<Item> FARADAY_ARMOR_BOOTS = REGISTRY.register("faraday_armor_boots", () -> new FaradayArmorItem.Boots());
	public static final RegistryObject<Item> STEEL_HELMET = REGISTRY.register("steel_helmet", () -> new SteelItem.Helmet());
	public static final RegistryObject<Item> STEEL_CHESTPLATE = REGISTRY.register("steel_chestplate", () -> new SteelItem.Chestplate());
	public static final RegistryObject<Item> STEEL_LEGGINGS = REGISTRY.register("steel_leggings", () -> new SteelItem.Leggings());
	public static final RegistryObject<Item> STEEL_BOOTS = REGISTRY.register("steel_boots", () -> new SteelItem.Boots());
	public static final RegistryObject<Item> LABORATORY_BLOCK = block(ChemicallyModBlocks.LABORATORY_BLOCK);
	public static final RegistryObject<Item> CIRCUIT_BOARD = REGISTRY.register("circuit_board", () -> new CircuitBoardItem());
	public static final RegistryObject<Item> LOGIC_CIRCUIT = REGISTRY.register("logic_circuit", () -> new LogicCircuitItem());
	public static final RegistryObject<Item> CAUTION = block(ChemicallyModBlocks.CAUTION);
	public static final RegistryObject<Item> RED_CAUTION = block(ChemicallyModBlocks.RED_CAUTION);
	public static final RegistryObject<Item> QUARTZ_LAMP = block(ChemicallyModBlocks.QUARTZ_LAMP);
	public static final RegistryObject<Item> POWDERED_REDSTONE = block(ChemicallyModBlocks.POWDERED_REDSTONE);
	public static final RegistryObject<Item> GRAVITY_GUN = REGISTRY.register("gravity_gun", () -> new GravityGunItem());
	public static final RegistryObject<Item> COCKROACH_SPAWN_EGG = REGISTRY.register("cockroach_spawn_egg", () -> new ForgeSpawnEggItem(ChemicallyModEntities.COCKROACH, -4823715, -11258317, new Item.Properties()));
	public static final RegistryObject<Item> COCKROACH_WING = REGISTRY.register("cockroach_wing", () -> new CockroachWingItem());
	public static final RegistryObject<Item> TEMPORAL_LAMP = block(ChemicallyModBlocks.TEMPORAL_LAMP);
	public static final RegistryObject<Item> CHISELED_PURPUR = block(ChemicallyModBlocks.CHISELED_PURPUR);
	public static final RegistryObject<Item> OBSIDIAN_BRICKS = block(ChemicallyModBlocks.OBSIDIAN_BRICKS);
	public static final RegistryObject<Item> OBSIDIAN_TILES = block(ChemicallyModBlocks.OBSIDIAN_TILES);
	public static final RegistryObject<Item> OBSIDIAN_RUNES = block(ChemicallyModBlocks.OBSIDIAN_RUNES);
	public static final RegistryObject<Item> DEEPSLATE_SQUARES = block(ChemicallyModBlocks.DEEPSLATE_SQUARES);
	public static final RegistryObject<Item> POLISHED_ENDSTONE = block(ChemicallyModBlocks.POLISHED_ENDSTONE);
	public static final RegistryObject<Item> ENDSTONE_PILLAR = block(ChemicallyModBlocks.ENDSTONE_PILLAR);
	public static final RegistryObject<Item> SANDSTONE_FIRE_TRAP = block(ChemicallyModBlocks.SANDSTONE_FIRE_TRAP);
	public static final RegistryObject<Item> CHISELED_STONE_BRICK_PILLAR = block(ChemicallyModBlocks.CHISELED_STONE_BRICK_PILLAR);
	public static final RegistryObject<Item> STONE_TILES = block(ChemicallyModBlocks.STONE_TILES);
	public static final RegistryObject<Item> STONE_PILLAR = block(ChemicallyModBlocks.STONE_PILLAR);
	public static final RegistryObject<Item> CHISELED_ENDSTONE = block(ChemicallyModBlocks.CHISELED_ENDSTONE);
	public static final RegistryObject<Item> STEEL_FACTORY_FLOOR = block(ChemicallyModBlocks.STEEL_FACTORY_FLOOR);
	public static final RegistryObject<Item> ALUMINUM_DOOR = doubleBlock(ChemicallyModBlocks.ALUMINUM_DOOR);
	public static final RegistryObject<Item> LIGHT_BULB = REGISTRY.register("light_bulb", () -> new LightBulbItem());
	public static final RegistryObject<Item> ANTENNA = REGISTRY.register("antenna", () -> new AntennaItem());
	public static final RegistryObject<Item> CAPACITOR = REGISTRY.register("capacitor", () -> new CapacitorItem());
	public static final RegistryObject<Item> ENGINE_PISTON = REGISTRY.register("engine_piston", () -> new EnginePistonItem());
	public static final RegistryObject<Item> SERVO = REGISTRY.register("servo", () -> new ServoItem());
	public static final RegistryObject<Item> ADVANCED_LOGIC_CIRCUIT = REGISTRY.register("advanced_logic_circuit", () -> new AdvancedLogicCircuitItem());
	public static final RegistryObject<Item> ADVANCED_COMPUTATION_CIRCUIT = REGISTRY.register("advanced_computation_circuit", () -> new AdvancedComputationCircuitItem());
	public static final RegistryObject<Item> BIOMASS = REGISTRY.register("biomass", () -> new BiomassItem());
	public static final RegistryObject<Item> PURPLE_TULIP = block(ChemicallyModBlocks.PURPLE_TULIP);
	public static final RegistryObject<Item> EPHEDRA = REGISTRY.register("ephedra", () -> new EphedraItem());
	public static final RegistryObject<Item> EPHEDRA_SEEDS = REGISTRY.register("ephedra_seeds", () -> new EphedraSeedsItem());
	public static final RegistryObject<Item> SULFUR_ORE = block(ChemicallyModBlocks.SULFUR_ORE);
	public static final RegistryObject<Item> LEAD_ORE = block(ChemicallyModBlocks.LEAD_ORE);
	public static final RegistryObject<Item> URANIUM_DEEPSLATE_ORE = block(ChemicallyModBlocks.URANIUM_DEEPSLATE_ORE);
	public static final RegistryObject<Item> URANIUM_ORE = block(ChemicallyModBlocks.URANIUM_ORE);
	public static final RegistryObject<Item> HIGH_VELOCITY_ROTOR = block(ChemicallyModBlocks.HIGH_VELOCITY_ROTOR);
	public static final RegistryObject<Item> LPMDS = block(ChemicallyModBlocks.LPMDS);
	public static final RegistryObject<Item> RF_CAVITY_RESONATOR = block(ChemicallyModBlocks.RF_CAVITY_RESONATOR);
	public static final RegistryObject<Item> THRESHOLD_STRUCTURE_BLOCK = block(ChemicallyModBlocks.THRESHOLD_STRUCTURE_BLOCK);
	public static final RegistryObject<Item> NANOPHOTONIC_ELECTRON_ACCELERATOR = REGISTRY.register("nanophotonic_electron_accelerator", () -> new NanophotonicElectronAcceleratorItem());
	public static final RegistryObject<Item> PORTABLE_LPMDS = REGISTRY.register("portable_lpmds", () -> new PortableLPMDSItem());
	public static final RegistryObject<Item> SYNCHROTRON = REGISTRY.register("synchrotron", () -> new SynchrotronItem());
	public static final RegistryObject<Item> EVERYTHING = REGISTRY.register("everything", () -> new EverythingItem());
	public static final RegistryObject<Item> SUPERCONDUCTIVE_MAGNET = block(ChemicallyModBlocks.SUPERCONDUCTIVE_MAGNET);
	public static final RegistryObject<Item> ASPHALT = block(ChemicallyModBlocks.ASPHALT);
	public static final RegistryObject<Item> ASBESTOS = block(ChemicallyModBlocks.ASBESTOS);
	public static final RegistryObject<Item> REFINED_QUARTZ = REGISTRY.register("refined_quartz", () -> new RefinedQuartzItem());
	public static final RegistryObject<Item> ADHESIVE = REGISTRY.register("adhesive", () -> new AdhesiveItem());
	public static final RegistryObject<Item> ALUMINOSILICATE = REGISTRY.register("aluminosilicate", () -> new AluminosilicateItem());
	public static final RegistryObject<Item> POLYVINYL_CHLORIDE = REGISTRY.register("polyvinyl_chloride", () -> new PolyvinylChlorideItem());
	public static final RegistryObject<Item> POLYETHYLENE = REGISTRY.register("polyethylene", () -> new PolyethyleneItem());
	public static final RegistryObject<Item> RUBBER = REGISTRY.register("rubber", () -> new RubberItem());
	public static final RegistryObject<Item> SALTPETER = REGISTRY.register("saltpeter", () -> new SaltpeterItem());
	public static final RegistryObject<Item> PSEUDOEPHEDRINE = REGISTRY.register("pseudoephedrine", () -> new PseudoephedrineItem());
	public static final RegistryObject<Item> CYANIDE = REGISTRY.register("cyanide", () -> new CyanideItem());
	public static final RegistryObject<Item> NITRATE_DUST = REGISTRY.register("nitrate_dust", () -> new NitrateDustItem());
	public static final RegistryObject<Item> METH = REGISTRY.register("meth", () -> new MethItem());
	public static final RegistryObject<Item> THERMITE = REGISTRY.register("thermite", () -> new ThermiteItem());
	public static final RegistryObject<Item> STEEL_BLOCK = block(ChemicallyModBlocks.STEEL_BLOCK);
	public static final RegistryObject<Item> STEEL_INGOT = REGISTRY.register("steel_ingot", () -> new SteelIngotItem());
	public static final RegistryObject<Item> AQUAMARINE_BLOCK = block(ChemicallyModBlocks.AQUAMARINE_BLOCK);
	public static final RegistryObject<Item> AQUAMARINE = REGISTRY.register("aquamarine", () -> new AquamarineItem());
	public static final RegistryObject<Item> JADE_BLOCK = block(ChemicallyModBlocks.JADE_BLOCK);
	public static final RegistryObject<Item> JADE = REGISTRY.register("jade", () -> new JadeItem());
	public static final RegistryObject<Item> ONYX_BLOCK = block(ChemicallyModBlocks.ONYX_BLOCK);
	public static final RegistryObject<Item> ONYX = REGISTRY.register("onyx", () -> new OnyxItem());
	public static final RegistryObject<Item> RUBY_BLOCK = block(ChemicallyModBlocks.RUBY_BLOCK);
	public static final RegistryObject<Item> RUBY = REGISTRY.register("ruby", () -> new RubyItem());
	public static final RegistryObject<Item> BRONZE_BLOCK = block(ChemicallyModBlocks.BRONZE_BLOCK);
	public static final RegistryObject<Item> BRONZE_INGOT = REGISTRY.register("bronze_ingot", () -> new BronzeIngotItem());
	public static final RegistryObject<Item> CONSTANTAN_INGOT = REGISTRY.register("constantan_ingot", () -> new ConstantanItem());
	public static final RegistryObject<Item> ELECTRUM_INGOT = REGISTRY.register("electrum_ingot", () -> new ElectrumIngotItem());
	public static final RegistryObject<Item> HYDROGEN = REGISTRY.register("hydrogen", () -> new HydrogenItem());
	public static final RegistryObject<Item> NITROGEN = REGISTRY.register("nitrogen", () -> new NitrogenItem());
	public static final RegistryObject<Item> AMMONIA = REGISTRY.register("ammonia", () -> new AmmoniaItem());
	public static final RegistryObject<Item> WITHERITE_INGOT = REGISTRY.register("witherite_ingot", () -> new WitheriteIngotItem());
	public static final RegistryObject<Item> WITHERITE = block(ChemicallyModBlocks.WITHERITE);
	public static final RegistryObject<Item> URANIUM_INGOT = REGISTRY.register("uranium_ingot", () -> new UraniumIngotItem());
	public static final RegistryObject<Item> URANIUM_BLOCK = block(ChemicallyModBlocks.URANIUM_BLOCK);
	public static final RegistryObject<Item> RAW_URANIUM_BLOCK = block(ChemicallyModBlocks.RAW_URANIUM_BLOCK);
	public static final RegistryObject<Item> RAW_URANIUM = REGISTRY.register("raw_uranium", () -> new RawUraniumItem());
	public static final RegistryObject<Item> TIME_CRYSTAL_BLOCK = block(ChemicallyModBlocks.TIME_CRYSTAL_BLOCK);
	public static final RegistryObject<Item> TIME_CRYSTAL = REGISTRY.register("time_crystal", () -> new TimeCrystalItem());
	public static final RegistryObject<Item> LEAD_INGOT = REGISTRY.register("lead_ingot", () -> new LeadIngotItem());
	public static final RegistryObject<Item> LEAD_BLOCK = block(ChemicallyModBlocks.LEAD_BLOCK);
	public static final RegistryObject<Item> RAW_LEAD_BLOCK = block(ChemicallyModBlocks.RAW_LEAD_BLOCK);
	public static final RegistryObject<Item> RAW_LEAD_ITEM = REGISTRY.register("raw_lead_item", () -> new RawLeadItemItem());
	public static final RegistryObject<Item> NICKEL_INGOT = REGISTRY.register("nickel_ingot", () -> new NickelIngotItem());
	public static final RegistryObject<Item> RAW_NICKEL_BLOCK = block(ChemicallyModBlocks.RAW_NICKEL_BLOCK);
	public static final RegistryObject<Item> RAW_NICKEL_ITEM = REGISTRY.register("raw_nickel_item", () -> new RawNickelItemItem());
	public static final RegistryObject<Item> SILVER_INGOT = REGISTRY.register("silver_ingot", () -> new SilverIngotItem());
	public static final RegistryObject<Item> SILVER_BLOCK = block(ChemicallyModBlocks.SILVER_BLOCK);
	public static final RegistryObject<Item> RAW_SILVER_BLOCK = block(ChemicallyModBlocks.RAW_SILVER_BLOCK);
	public static final RegistryObject<Item> RAW_SILVER = REGISTRY.register("raw_silver", () -> new RawSilverItem());
	public static final RegistryObject<Item> ALUMINUM_INGOT = REGISTRY.register("aluminum_ingot", () -> new AluminumIngotItem());
	public static final RegistryObject<Item> ALUMINUM_BLOCK = block(ChemicallyModBlocks.ALUMINUM_BLOCK);
	public static final RegistryObject<Item> RAW_ALUMINUM_BLOCK = block(ChemicallyModBlocks.RAW_ALUMINUM_BLOCK);
	public static final RegistryObject<Item> RAW_ALUMINUM = REGISTRY.register("raw_aluminum", () -> new RawAluminumItem());
	public static final RegistryObject<Item> SULFUR_BLOCK = block(ChemicallyModBlocks.SULFUR_BLOCK);
	public static final RegistryObject<Item> SULFUR = REGISTRY.register("sulfur", () -> new SulfurItem());
	public static final RegistryObject<Item> PHOSPHOROUS = REGISTRY.register("phosphorous", () -> new PhosphorousItem());
	public static final RegistryObject<Item> IODINE = REGISTRY.register("iodine", () -> new IodineItem());
	public static final RegistryObject<Item> URANIUM_ARMOR_HELMET = REGISTRY.register("uranium_armor_helmet", () -> new UraniumArmorItem.Helmet());
	public static final RegistryObject<Item> URANIUM_ARMOR_CHESTPLATE = REGISTRY.register("uranium_armor_chestplate", () -> new UraniumArmorItem.Chestplate());
	public static final RegistryObject<Item> URANIUM_ARMOR_LEGGINGS = REGISTRY.register("uranium_armor_leggings", () -> new UraniumArmorItem.Leggings());
	public static final RegistryObject<Item> URANIUM_ARMOR_BOOTS = REGISTRY.register("uranium_armor_boots", () -> new UraniumArmorItem.Boots());
	public static final RegistryObject<Item> URANIUM_SWORD = REGISTRY.register("uranium_sword", () -> new UraniumSwordItem());
	public static final RegistryObject<Item> COPPER_ARMOR_HELMET = REGISTRY.register("copper_armor_helmet", () -> new CopperArmorItem.Helmet());
	public static final RegistryObject<Item> COPPER_ARMOR_CHESTPLATE = REGISTRY.register("copper_armor_chestplate", () -> new CopperArmorItem.Chestplate());
	public static final RegistryObject<Item> COPPER_ARMOR_LEGGINGS = REGISTRY.register("copper_armor_leggings", () -> new CopperArmorItem.Leggings());
	public static final RegistryObject<Item> COPPER_ARMOR_BOOTS = REGISTRY.register("copper_armor_boots", () -> new CopperArmorItem.Boots());
	public static final RegistryObject<Item> COPPER_SWORD = REGISTRY.register("copper_sword", () -> new CopperSwordItem());
	public static final RegistryObject<Item> LEAD_ARMOR_HELMET = REGISTRY.register("lead_armor_helmet", () -> new LeadArmorItem.Helmet());
	public static final RegistryObject<Item> LEAD_ARMOR_CHESTPLATE = REGISTRY.register("lead_armor_chestplate", () -> new LeadArmorItem.Chestplate());
	public static final RegistryObject<Item> LEAD_ARMOR_LEGGINGS = REGISTRY.register("lead_armor_leggings", () -> new LeadArmorItem.Leggings());
	public static final RegistryObject<Item> LEAD_ARMOR_BOOTS = REGISTRY.register("lead_armor_boots", () -> new LeadArmorItem.Boots());
	public static final RegistryObject<Item> LEAD_SWORD = REGISTRY.register("lead_sword", () -> new LeadSwordItem());
	public static final RegistryObject<Item> ALUMINUM_ARMOR_HELMET = REGISTRY.register("aluminum_armor_helmet", () -> new AluminumArmorItem.Helmet());
	public static final RegistryObject<Item> ALUMINUM_ARMOR_CHESTPLATE = REGISTRY.register("aluminum_armor_chestplate", () -> new AluminumArmorItem.Chestplate());
	public static final RegistryObject<Item> ALUMINUM_ARMOR_LEGGINGS = REGISTRY.register("aluminum_armor_leggings", () -> new AluminumArmorItem.Leggings());
	public static final RegistryObject<Item> ALUMINUM_ARMOR_BOOTS = REGISTRY.register("aluminum_armor_boots", () -> new AluminumArmorItem.Boots());
	public static final RegistryObject<Item> ALUMINUM_SWORD = REGISTRY.register("aluminum_sword", () -> new AluminumSwordItem());
	public static final RegistryObject<Item> URANIUM_AXE = REGISTRY.register("uranium_axe", () -> new UraniumAxeItem());
	public static final RegistryObject<Item> URANIUM_PICKAXE = REGISTRY.register("uranium_pickaxe", () -> new UraniumPickaxeItem());
	public static final RegistryObject<Item> URANIUM_SHOVEL = REGISTRY.register("uranium_shovel", () -> new UraniumShovelItem());
	public static final RegistryObject<Item> URANIUM_HOE = REGISTRY.register("uranium_hoe", () -> new UraniumHoeItem());
	public static final RegistryObject<Item> COPPER_PICKAXE = REGISTRY.register("copper_pickaxe", () -> new CopperPickaxeItem());
	public static final RegistryObject<Item> COPPER_AXE = REGISTRY.register("copper_axe", () -> new CopperAxeItem());
	public static final RegistryObject<Item> COPPER_SHOVEL = REGISTRY.register("copper_shovel", () -> new CopperShovelItem());
	public static final RegistryObject<Item> COPPER_HOE = REGISTRY.register("copper_hoe", () -> new CopperHoeItem());
	public static final RegistryObject<Item> LEAD_PICKAXE = REGISTRY.register("lead_pickaxe", () -> new LeadPickaxeItem());
	public static final RegistryObject<Item> LEAD_AXE = REGISTRY.register("lead_axe", () -> new LeadAxeItem());
	public static final RegistryObject<Item> LEAD_SHOVEL = REGISTRY.register("lead_shovel", () -> new LeadShovelItem());
	public static final RegistryObject<Item> LEAD_HOE = REGISTRY.register("lead_hoe", () -> new LeadHoeItem());
	public static final RegistryObject<Item> ALUMINUM_PICKAXE = REGISTRY.register("aluminum_pickaxe", () -> new AluminumPickaxeItem());
	public static final RegistryObject<Item> ALUMINUM_AXE = REGISTRY.register("aluminum_axe", () -> new AluminumAxeItem());
	public static final RegistryObject<Item> ALUMINUM_SHOVEL = REGISTRY.register("aluminum_shovel", () -> new AluminumShovelItem());
	public static final RegistryObject<Item> ALUMINUM_HOE = REGISTRY.register("aluminum_hoe", () -> new AluminumHoeItem());
	public static final RegistryObject<Item> QUARTZ_LAMP_ACTIVE = block(ChemicallyModBlocks.QUARTZ_LAMP_ACTIVE);
	public static final RegistryObject<Item> SANDSTONE_FIRE_TRAP_IGNITED = block(ChemicallyModBlocks.SANDSTONE_FIRE_TRAP_IGNITED);
	public static final RegistryObject<Item> FRAMED_BRICKS = block(ChemicallyModBlocks.FRAMED_BRICKS);
	public static final RegistryObject<Item> BORDERED_BRICKS = block(ChemicallyModBlocks.BORDERED_BRICKS);
	public static final RegistryObject<Item> GREEN_LAMP = block(ChemicallyModBlocks.GREEN_LAMP);
	public static final RegistryObject<Item> GREEN_LAMP_ON = block(ChemicallyModBlocks.GREEN_LAMP_ON);
	public static final RegistryObject<Item> ELECTRIC_LIGHTER = REGISTRY.register("electric_lighter", () -> new ElectricLighterItem());
	public static final RegistryObject<Item> HAT = REGISTRY.register("hat", () -> new HatItem());

	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}

	private static RegistryObject<Item> doubleBlock(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new DoubleHighBlockItem(block.get(), new Item.Properties()));
	}

	@SubscribeEvent
	public static void clientLoad(FMLClientSetupEvent event) {
		event.enqueueWork(() -> {
			ItemProperties.register(FLASK.get(), new ResourceLocation("chemically:flask_content1"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(FLASK.get(), new ResourceLocation("chemically:flask_content2"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProvider2Procedure.execute(itemStackToRender));
			ItemProperties.register(FLASK.get(), new ResourceLocation("chemically:flask_content3"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProvider3Procedure.execute(itemStackToRender));
			ItemProperties.register(BEAKER.get(), new ResourceLocation("chemically:beaker_content1"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(BEAKER.get(), new ResourceLocation("chemically:beaker_content2"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProvider2Procedure.execute(itemStackToRender));
			ItemProperties.register(BEAKER.get(), new ResourceLocation("chemically:beaker_content3"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BeakerPropertyValueProvider3Procedure.execute(itemStackToRender));
			ItemProperties.register(FUEL_CANISTER.get(), new ResourceLocation("chemically:fuel_canister_fuel"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) FuelCanisterPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(SCANNER.get(), new ResourceLocation("chemically:scanner_strength"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) SCANNERPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(LITHIUM_ION_BATTERY.get(), new ResourceLocation("chemically:lithium_ion_battery_energy"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) LithiumIonBatteryPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(THERMITE_GRENAD.get(), new ResourceLocation("chemically:thermite_grenad_activated"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) ThermiteGrenadPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(GRAVITY_GUN.get(), new ResourceLocation("chemically:gravity_gun_active"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) GravityGunPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(PORTABLE_LPMDS.get(), new ResourceLocation("chemically:portable_lpmds_charge"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) LithiumIonBatteryPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(ELECTRIC_LIGHTER.get(), new ResourceLocation("chemically:electric_lighter_open"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) ElectricLighterPropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(ELECTRIC_LIGHTER.get(), new ResourceLocation("chemically:electric_lighter_active"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) ElectricLighterActivePropertyValueProviderProcedure.execute(itemStackToRender));
			ItemProperties.register(ELECTRIC_LIGHTER.get(), new ResourceLocation("chemically:electric_lighter_maxenergy"),
					(itemStackToRender, clientWorld, entity, itemEntityId) -> (float) ElectriceLighterPropertyValueProviderProcedure.execute(itemStackToRender));
		});
	}
}
